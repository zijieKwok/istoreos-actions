#
# Copyright (c) 2019-2020 P3TERX <https://p3terx.com>
#
# This is free software, licensed under the MIT License.
# See /LICENSE for more information.
#
# https://github.com/P3TERX/Actions-OpenWrt
# Description: Build OpenWrt using GitHub Actions
#

name: Build 360T7

on:
  workflow_dispatch:
   schedule:
     - cron: '0 4 * * *'

env:
  REPO_URL: https://github.com/zijieKwok/immortalwrt-mt798x
  REPO_BRANCH: openwrt-21.02
  FEEDS_CONF: 360t7/feeds.conf.default
  CONFIG_FILE: 360t7/.config
  DIY_P1_SH: 360t7/diy1.sh
  DIY_P2_SH: 360t7/diy2.sh
  UPLOAD_FIRMWARE: false
  UPLOAD_RELEASE: true
  PUSHPLUS_TOKEN: ${{ secrets.PUSHPLUS_TOKEN }}
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
    - name: 检查项目分支
      uses: actions/checkout@main

    - name: 初始化编译环境
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo sed -i "s|http://.*/ubuntu|http://mirror.cs.umn.edu/ubuntu|g" /etc/apt/sources.list
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install $(curl -fsSL git.io/depends-ubuntu-2004)
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo timedatectl set-timezone "$TZ"
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir
        echo "FIRMWARE_VERSION=$(date +"%y%m%d")" >> $GITHUB_ENV
        echo "START_DATE=$(date +'%Y年%m月%d日 %H点%M分')" >> $GITHUB_ENV

    - name: PushPlus 通知
      if: env.PUSHPLUS_TOKEN
      continue-on-error: true
      run: |
        curl -k -d "title=开始编译360T7固件" -d "content=编译固件版本：${{ env.FIRMWARE_VERSION }}%0A编译开始时间：${{ env.START_DATE }}" -d "token=${{ env.PUSHPLUS_TOKEN }}&channel=cp&webhook=server" "http://www.pushplus.plus/send"
    
    - name: 下载源码
      working-directory: /workdir
      run: |
        df -hT $PWD
        git clone $REPO_URL -b $REPO_BRANCH openwrt
        ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt

    - name: 加载软件源
      run: |
        [ -e $FEEDS_CONF ] && mv $FEEDS_CONF openwrt/feeds.conf.default
        chmod +x $DIY_P1_SH
        cd openwrt
        $GITHUB_WORKSPACE/$DIY_P1_SH

    - name: 更新并安装软件源
      run: cd openwrt && ./scripts/feeds update -a && ./scripts/feeds install -a

    - name: 加载自定义配置
      run: |
        [ -e 360T7/files ] && mv 360t7/files openwrt/files
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
        chmod +x $DIY_P2_SH
        cd openwrt
        $GITHUB_WORKSPACE/$DIY_P2_SH

    - name: 下载包
      id: package
      run: |
        cd openwrt
        make defconfig
        make download -j8
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;

    - name: 编译固件
      id: compile
      run: |
        cd openwrt
        echo -e "$(nproc) thread compile"
        make -j$(nproc) || make -j1 V=s || (curl -k -d "title=360T7固件编译失败" -d "content=编译固件版本：${{ env.FIRMWARE_VERSION }}%0A编译开始时间：${{ env.START_DATE }}%0A编译结束时间：$(date +'%Y年%m月%d日 %H点%M分')" -d "token=${{ env.PUSHPLUS_TOKEN }}&channel=cp&webhook=server" "http://www.pushplus.plus/send")
        echo "status=success" >> $GITHUB_OUTPUT

    - name: 整理固件
      id: organize
      if: steps.compile.outputs.status == 'success' && !cancelled()
      run: |
        # 整理固件包时候,删除您不想要的固件或者文件,让它不需要上传到Actions空间
        cd openwrt/bin/targets/*/*
        rm -rf packages
        rm -rf version.buildinfo
        rm -rf profiles.json
        rm -rf *rootfs*
        rm -rf *kernel*
        rm -rf *.manifest
        rm -rf feeds.buildinfo
        rm -rf sha256sums
        mv *sysupgrade.bin 360T7-${{ env.FIRMWARE_VERSION }}-sysupgrade.bin || echo 没有找到 *sysupgrade.bin 文件
        mv *factory.bin 360T7-${{ env.FIRMWARE_VERSION }}-factory.bin || echo 没有找到 *factory.bin 文件
        echo -e "$(sha256sum *)\n" > sha256sums
        echo "FIRMWARE=$PWD" >> $GITHUB_ENV
        echo "status=success" >> $GITHUB_OUTPUT

    - name: 上传固件到Github Action空间
      if: env.UPLOAD_FIRMWARE == 'true' 
      uses: actions/upload-artifact@main
      with:
        name: 360T7-${{ env.FIRMWARE_VERSION }}
        path: ${{ env.FIRMWARE }}

    - name: 生成发布标签
      id: tag
      if: steps.compile.outputs.status == 'success' && env.UPLOAD_RELEASE == 'true' && !cancelled()
      run: |
        echo "::set-output name=release_tag::$(date +"%Y.%m.%d-%H.%M")"
        touch release.txt
        echo "
        ✎ 插件: $(grep "CONFIG_PACKAGE_luci-app-\(.*\)=y" openwrt/.config | sed "s/CONFIG_PACKAGE_luci-app-\(.*\)=y/\1/g" | grep -v "_\|arpbind\|autoreboot\|firewall\|mtk\|opkg")

        💻 架构: ${{ matrix.ARCHITECTURE }}

        📂 源码: ${{ env.REPO_URL }}

        🌳 分支: ${{ matrix.REPO_BRANCH }}

        ⏱️ 编译时间: $(date +"%Y年%m月%d日%H时%M分")

        🌐 管理地址: 192.168.5.1

        👤 用户名: root

        🔒 密码: password " >> release.txt
        echo "::set-output name=status::success"

    - name: 自动发布固件到 Releases
      uses: softprops/action-gh-release@v1
      if: steps.tag.outputs.status == 'success' && !cancelled()
      with:
        tag_name: ${{ steps.tag.outputs.release_tag }}
        body_path: release.txt
        files: ${{ env.FIRMWARE }}/*

    - name: PushPlus 通知
      if: env.PUSHPLUS_TOKEN
      continue-on-error: true
      run: |
        curl -k -d "title=360T7固件编译成功" -d "content=编译固件版本：${{ env.FIRMWARE_VERSION }}%0A编译开始时间：${{ env.START_DATE }}%0A编译结束时间：$(date +'%Y年%m月%d日 %H点%M分')" -d "token=${{ env.PUSHPLUS_TOKEN }}&channel=cp&webhook=server" "http://www.pushplus.plus/send"
